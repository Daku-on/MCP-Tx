name: Lint

on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ruff-check:
    name: Ruff Check
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Run Ruff check
        uses: astral-sh/ruff-action@v3
        with:
          version: "0.11.10"
          args: check --no-cache # NOTE: ローカルと動作環境を合わせるために --no-cache を指定している

  ruff-format:
    name: Ruff Format
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Run Ruff Format
        uses: astral-sh/ruff-action@v3
        with:
          version: "0.11.10"
          args: format --check --no-cache # NOTE: ローカルと動作環境を合わせるために --no-cache を指定している

  mypy:
    name: Mypy static type check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Restore virtual environment
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('uv.lock') }}

      - name: Install the project
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: uv sync --locked --all-extras --dev

      - name: Restore mypy cache
        uses: actions/cache@v4
        with:
          path: .mypy_cache
          key: mypy-${{ runner.os }}-${{ hashFiles('**/*.py') }}
      
      - name: Run mypy on app and tests directories
        run: uv run mypy .